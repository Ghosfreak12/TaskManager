{"version":3,"file":"static/js/224.73b7a0ae.chunk.js","mappings":"2MAIe,SAASA,EAAMC,GAAoB,IAAlB,QAACC,EAAO,KAAEC,GAAKF,EAC7C,OACEG,EAAAA,EAAAA,KAAA,UAAQF,QAASA,EAASG,UAAU,SAAQC,SAAEH,GAElD,CC6CA,QA7CA,SAAiBF,GAAsI,IAArI,MAAEM,EAAK,IAAEC,EAAG,SAAEC,EAAQ,OAAEC,EAAM,UAAEC,EAAS,aAAEC,EAAY,iBAAEC,EAAgB,oBAAEC,EAAmB,SAAEC,EAAQ,YAAEC,EAAW,UAAEC,GAAWhB,EAClJ,OACEiB,EAAAA,EAAAA,MAAA,OAAAZ,SAAA,EACEY,EAAAA,EAAAA,MAACC,EAAAA,EAAoB,CAACC,YAAaC,EAAAA,EAAaf,SAAA,EAC9CF,EAAAA,EAAAA,KAACkB,EAAAA,EAAc,CACbC,MAAM,kBACNC,MAAOjB,EACPkB,SAAWC,GAAajB,EAASiB,GACjCC,YAAcC,IAAWxB,EAAAA,EAAAA,KAACyB,EAAAA,EAAS,IAAKD,OAE1CxB,EAAAA,EAAAA,KAACkB,EAAAA,EAAc,CACbC,MAAM,gBACNC,MAAOhB,EACPiB,SAAWC,GAAahB,EAAOgB,GAC/BC,YAAcC,IAAWxB,EAAAA,EAAAA,KAACyB,EAAAA,EAAS,IAAKD,UAG5CxB,EAAAA,EAAAA,KAAA,SACE0B,KAAK,OACLC,YAAY,aACZP,MAAOb,EACPc,SAAWO,GAAMpB,EAAaoB,EAAEC,OAAOT,OACvCnB,UAAU,WAEZD,EAAAA,EAAAA,KAAA,SACE0B,KAAK,OACLC,YAAY,oBACZP,MAAOX,EACPY,SAAWO,GAAMlB,EAAoBkB,EAAEC,OAAOT,OAC9CnB,UAAU,WAEZa,EAAAA,EAAAA,MAAA,UACEM,MAAOT,EACPU,SAAWO,GAAMhB,EAAYgB,EAAEC,OAAOT,OACtCnB,UAAU,QAAOC,SAAA,EAEjBF,EAAAA,EAAAA,KAAA,UAAQoB,MAAM,OAAMlB,SAAC,UACrBF,EAAAA,EAAAA,KAAA,UAAQoB,MAAM,SAAQlB,SAAC,YACvBF,EAAAA,EAAAA,KAAA,UAAQoB,MAAM,MAAKlB,SAAC,YAEtBF,EAAAA,EAAAA,KAACJ,EAAM,CAACE,QAASe,EAAWd,KAAK,eAGvC,C","sources":["Button.js","TaskForm.js"],"sourcesContent":["import React from \"react\";\nimport {addTask, signOut} from \"./App.js\";\nimport './App.css';\n\nexport default function Button ({onClick, name}) {\n  return (\n    <button onClick={onClick} className=\"button\">{name}</button>\n  );\n}","// TaskForm.js\nimport React from 'react';\nimport { DateTimePicker } from '@mui/x-date-pickers/DateTimePicker';\nimport TextField from '@mui/material/TextField';\nimport { LocalizationProvider } from '@mui/x-date-pickers/LocalizationProvider';\nimport { AdapterDayjs } from '@mui/x-date-pickers/AdapterDayjs';\nimport Button from './Button'; // Assuming you have a Button component\n\nfunction TaskForm({ start, end, setStart, setEnd, eventName, setEventName, eventDescription, setEventDescription, priority, setPriority, onAddTask }) {\n  return (\n    <div>\n      <LocalizationProvider dateAdapter={AdapterDayjs}>\n        <DateTimePicker\n          label=\"Start Date Time\"\n          value={start}\n          onChange={(newValue) => setStart(newValue)}\n          renderInput={(params) => <TextField {...params} />}\n        />\n        <DateTimePicker\n          label=\"End Date Time\"\n          value={end}\n          onChange={(newValue) => setEnd(newValue)}\n          renderInput={(params) => <TextField {...params} />}\n        />\n      </LocalizationProvider>\n      <input\n        type=\"text\"\n        placeholder=\"Event Name\"\n        value={eventName}\n        onChange={(e) => setEventName(e.target.value)}\n        className=\"input\"\n      />\n      <input\n        type=\"text\"\n        placeholder=\"Event Description\"\n        value={eventDescription}\n        onChange={(e) => setEventDescription(e.target.value)}\n        className=\"input\"\n      />\n      <select\n        value={priority}\n        onChange={(e) => setPriority(e.target.value)}\n        className=\"input\"\n      >\n        <option value=\"High\">High</option>\n        <option value=\"Normal\">Normal</option>\n        <option value=\"Low\">Low</option>\n      </select>\n      <Button onClick={onAddTask} name=\"Add Task\" />\n    </div>\n  );\n}\n\nexport default TaskForm;\n"],"names":["Button","_ref","onClick","name","_jsx","className","children","start","end","setStart","setEnd","eventName","setEventName","eventDescription","setEventDescription","priority","setPriority","onAddTask","_jsxs","LocalizationProvider","dateAdapter","AdapterDayjs","DateTimePicker","label","value","onChange","newValue","renderInput","params","TextField","type","placeholder","e","target"],"sourceRoot":""}